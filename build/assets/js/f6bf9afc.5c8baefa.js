"use strict";(self.webpackChunkvlang_ru=self.webpackChunkvlang_ru||[]).push([[8635],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(p,".").concat(g)]||d[g]||s[g]||r;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:8},o="Debugging",l={unversionedId:"advanced/debugging",id:"advanced/debugging",title:"Debugging",description:"C Backend binaries (Default)",source:"@site/docs/advanced/debugging.md",sourceDirName:"advanced",slug:"/advanced/debugging",permalink:"/docs/advanced/debugging",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Global Variables",permalink:"/docs/advanced/global-variables"},next:{title:"Compile time pseudo variables",permalink:"/docs/advanced/compile-time-pseudo-variables"}},p={},u=[{value:"C Backend binaries (Default)",id:"c-backend-binaries-default",level:2},{value:"Native Backend binaries",id:"native-backend-binaries",level:2},{value:"Javascript Backend",id:"javascript-backend",level:2}],c={toc:u};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"debugging"},"Debugging"),(0,i.kt)("h2",{id:"c-backend-binaries-default"},"C Backend binaries (Default)"),(0,i.kt)("p",null,"To debug issues in the generated binary (flag: ",(0,i.kt)("inlineCode",{parentName:"p"},"-b c"),"), you can pass these flags:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-g")," - produces a less optimized executable with more debug information in it.\nV will enforce line numbers from the .v files in the stacktraces, that the\nexecutable will produce on panic. It is usually better to pass -g, unless\nyou are writing low level code, in which case use the next option ",(0,i.kt)("inlineCode",{parentName:"li"},"-cg"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-cg")," - produces a less optimized executable with more debug information in it.\nThe executable will use C source line numbers in this case. It is frequently\nused in combination with ",(0,i.kt)("inlineCode",{parentName:"li"},"-keepc"),", so that you can inspect the generated\nC program in case of panic, or so that your debugger (",(0,i.kt)("inlineCode",{parentName:"li"},"gdb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"lldb")," etc.)\ncan show you the generated C source code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-showcc")," - prints the C command that is used to build the program."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-show-c-output")," - prints the output, that your C compiler produced\nwhile compiling your program."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-keepc")," - do not delete the generated C source code file after a successful\ncompilation. Also keep using the same file path, so it is more stable,\nand easier to keep opened in an editor/IDE.")),(0,i.kt)("p",null,"For best debugging experience if you are writing a low level wrapper for an existing\nC library, you can pass several of these flags at the same time:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v -keepc -cg -showcc yourprogram.v"),", then just run your debugger (gdb/lldb) or IDE\non the produced executable ",(0,i.kt)("inlineCode",{parentName:"p"},"yourprogram"),"."),(0,i.kt)("p",null,"If you just want to inspect the generated C code,\nwithout further compilation, you can also use the ",(0,i.kt)("inlineCode",{parentName:"p"},"-o")," flag (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"-o file.c"),").\nThis will make V produce the ",(0,i.kt)("inlineCode",{parentName:"p"},"file.c")," then stop."),(0,i.kt)("p",null,"If you want to see the generated C source code for ",(0,i.kt)("em",{parentName:"p"},"just")," a single C function,\nfor example ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", you can use: ",(0,i.kt)("inlineCode",{parentName:"p"},"-printfn main -o file.c"),"."),(0,i.kt)("p",null,"To debug the V executable itself you need to compile from src with ",(0,i.kt)("inlineCode",{parentName:"p"},"./v -g -o v cmd/v"),"."),(0,i.kt)("p",null,"You can debug tests with for example ",(0,i.kt)("inlineCode",{parentName:"p"},"v -g -keepc prog_test.v"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"-keepc")," flag is needed,\nso that the executable is not deleted, after it was created and ran."),(0,i.kt)("p",null,"To see a detailed list of all flags that V supports,\nuse ",(0,i.kt)("inlineCode",{parentName:"p"},"v help"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"v help build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"v help build-c"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Commandline Debugging")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"compile your binary with debugging info ",(0,i.kt)("inlineCode",{parentName:"li"},"v -g hello.v")),(0,i.kt)("li",{parentName:"ol"},"debug with ",(0,i.kt)("a",{parentName:"li",href:"https://lldb.llvm.org"},"lldb")," or ",(0,i.kt)("a",{parentName:"li",href:"https://www.gnu.org/software/gdb/"},"GDB")," e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"lldb hello"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/vlang/v/wiki/Troubleshooting-(debugging)-executables-created-with-V-in-GDB"},"Troubleshooting (debugging) executables created with V in GDB")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Visual debugging Setup:"),"\nQQQ"),(0,i.kt)("p",null,"QQQ"),(0,i.kt)("h2",{id:"native-backend-binaries"},"Native Backend binaries"),(0,i.kt)("p",null,"Currently there is no debugging support for binaries, created by the\nnative backend (flag: ",(0,i.kt)("inlineCode",{parentName:"p"},"-b native"),")."),(0,i.kt)("h2",{id:"javascript-backend"},"Javascript Backend"),(0,i.kt)("p",null,"To debug the generated Javascript output you can activate source maps:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v -b js -sourcemap hello.v -o hello.js")),(0,i.kt)("p",null,"For all supported options check the latest help:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v help build-js")))}s.isMDXComponent=!0}}]);