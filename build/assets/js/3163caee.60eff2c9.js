"use strict";(self.webpackChunkvlang_ru=self.webpackChunkvlang_ru||[]).push([[7099],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:27},l="Tools",i={unversionedId:"documentation/tools",id:"documentation/tools",title:"Tools",description:"v fmt",source:"@site/docs/documentation/tools.md",sourceDirName:"documentation",slug:"/documentation/tools",permalink:"/docs/documentation/tools",draft:!1,tags:[],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27},sidebar:"tutorialSidebar",previous:{title:"Writing Documentation",permalink:"/docs/documentation/writing-documentation"},next:{title:"Package management",permalink:"/docs/documentation/package-management"}},s={},u=[{value:"v fmt",id:"v-fmt",level:2},{value:"v shader",id:"v-shader",level:2},{value:"Profiling",id:"profiling",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tools"},"Tools"),(0,r.kt)("h2",{id:"v-fmt"},"v fmt"),(0,r.kt)("p",null,"You don't need to worry about formatting your code or setting style guidelines.\n",(0,r.kt)("inlineCode",{parentName:"p"},"v fmt")," takes care of that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"v fmt file.v\n")),(0,r.kt)("p",null,"It's recommended to set up your editor, so that ",(0,r.kt)("inlineCode",{parentName:"p"},"v fmt -w")," runs on every save.\nA vfmt run is usually pretty cheap (takes <30ms)."),(0,r.kt)("p",null,"Always run ",(0,r.kt)("inlineCode",{parentName:"p"},"v fmt -w file.v")," before pushing your code."),(0,r.kt)("h2",{id:"v-shader"},"v shader"),(0,r.kt)("p",null,"You can use GPU shaders with V graphical apps. You write your shaders in an\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vlang/v/blob/1d8ece7/examples/sokol/02_cubes_glsl/cube_glsl.glsl"},"annotated GLSL dialect"),"\nand use ",(0,r.kt)("inlineCode",{parentName:"p"},"v shader")," to compile them for all supported target platforms."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"v shader /path/to/project/dir/or/file.v\n")),(0,r.kt)("p",null,"Currently you need to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vlang/v/blob/c14c324/examples/sokol/02_cubes_glsl/cube_glsl.v#L43-L46"},"include a header and declare a glue function")," before\nusing the shader in your code."),(0,r.kt)("h2",{id:"profiling"},"Profiling"),(0,r.kt)("p",null,"V has good support for profiling your programs: ",(0,r.kt)("inlineCode",{parentName:"p"},"v -profile profile.txt run file.v"),"\nThat will produce a profile.txt file, which you can then analyze."),(0,r.kt)("p",null,"The generated profile.txt file will have lines with 4 columns:\na) how many times a function was called\nb) how much time in total a function took (in ms)\nc) how much time on average, a call to a function took (in ns)\nd) the name of the v function"),(0,r.kt)("p",null,"You can sort on column 3 (average time per function) using:\n",(0,r.kt)("inlineCode",{parentName:"p"},"sort -n -k3 profile.txt|tail")),(0,r.kt)("p",null,"You can also use stopwatches to measure just portions of your code explicitly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-v"},"import time\n\nfn main() {\n    sw := time.new_stopwatch()\n    println('Hello world')\n    println('Greeting the world took: ${sw.elapsed().nanoseconds()}ns')\n}\n")))}p.isMDXComponent=!0}}]);