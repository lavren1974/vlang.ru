"use strict";(self.webpackChunkvlang_ru=self.webpackChunkvlang_ru||[]).push([[870],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5356:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:17},a="Cross-platform shell scripts in V",l={unversionedId:"advanced/cross-platform-shell-scripts",id:"advanced/cross-platform-shell-scripts",title:"Cross-platform shell scripts in V",description:"V can be used as an alternative to Bash to write deployment scripts, build scripts, etc.",source:"@site/docs/advanced/cross-platform-shell-scripts.md",sourceDirName:"advanced",slug:"/advanced/cross-platform-shell-scripts",permalink:"/docs/advanced/cross-platform-shell-scripts",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Cross compilation",permalink:"/docs/advanced/cross-compilation"},next:{title:"Attributes",permalink:"/docs/advanced/attributes"}},s={},p=[],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cross-platform-shell-scripts-in-v"},"Cross-platform shell scripts in V"),(0,i.kt)("p",null,"V can be used as an alternative to Bash to write deployment scripts, build scripts, etc."),(0,i.kt)("p",null,'The advantage of using V for this is the simplicity and predictability of the language, and\ncross-platform support. "V scripts" run on Unix-like systems as well as on Windows.'),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},".vsh")," file extension. It will make all functions in the ",(0,i.kt)("inlineCode",{parentName:"p"},"os"),"\nmodule global (so that you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"mkdir()")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"os.mkdir()"),", for example)."),(0,i.kt)("p",null,"An example ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy.vsh"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-v",metastring:"wip",wip:!0},"#!/usr/bin/env -S v run\n// The shebang above associates the file to V on Unix-like systems,\n// so it can be run just by specifying the path to the file\n// once it's made executable using `chmod +x`.\n\n// print command then execute it\nfn sh(cmd string){\n  println(\"\u276f $cmd\")\n  print(execute_or_exit(cmd).output)\n}\n\n// Remove if build/ exits, ignore any errors if it doesn't\nrmdir_all('build') or { }\n\n// Create build/, never fails as build/ does not exist\nmkdir('build')?\n\n// Move *.v files to build/\nresult := execute('mv *.v build/')\nif result.exit_code != 0 {\n    println(result.output)\n}\n\nsh('ls')\n\n// Similar to:\n// files := ls('.')?\n// mut count := 0\n// if files.len > 0 {\n//     for file in files {\n//         if file.ends_with('.v') {\n//              mv(file, 'build/') or {\n//                  println('err: $err')\n//                  return\n//              }\n//         }\n//         count++\n//     }\n// }\n// if count == 0 {\n//     println('No files')\n// }\n")),(0,i.kt)("p",null,"Now you can either compile this like a normal V program and get an executable you can deploy and run\nanywhere:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v deploy.vsh && ./deploy")),(0,i.kt)("p",null,"Or just run it more like a traditional Bash script:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v run deploy.vsh")),(0,i.kt)("p",null,"On Unix-like platforms, the file can be run directly after making it executable using ",(0,i.kt)("inlineCode",{parentName:"p"},"chmod +x"),":\n",(0,i.kt)("inlineCode",{parentName:"p"},"./deploy.vsh")))}u.isMDXComponent=!0}}]);