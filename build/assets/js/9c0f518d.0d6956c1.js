"use strict";(self.webpackChunkvlang_ru=self.webpackChunkvlang_ru||[]).push([[5177],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},989:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:17},o="Cross-platform shell scripts in V",s={unversionedId:"advanced/Cross-platform-shell-scripts",id:"advanced/Cross-platform-shell-scripts",title:"Cross-platform shell scripts in V",description:"V can be used as an alternative to Bash to write deployment scripts, build scripts, etc.",source:"@site/docs/advanced/Cross-platform-shell-scripts.md",sourceDirName:"advanced",slug:"/advanced/Cross-platform-shell-scripts",permalink:"/docs/advanced/Cross-platform-shell-scripts",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/Cross-platform-shell-scripts.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Cross compilation",permalink:"/docs/advanced/Cross-compilation"},next:{title:"Attributes",permalink:"/docs/advanced/Attributes"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cross-platform-shell-scripts-in-v"},"Cross-platform shell scripts in V"),(0,i.kt)("p",null,"V can be used as an alternative to Bash to write deployment scripts, build scripts, etc."),(0,i.kt)("p",null,'The advantage of using V for this is the simplicity and predictability of the language, and\ncross-platform support. "V scripts" run on Unix-like systems as well as on Windows.'),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},".vsh")," file extension. It will make all functions in the ",(0,i.kt)("inlineCode",{parentName:"p"},"os"),"\nmodule global (so that you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"mkdir()")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"os.mkdir()"),", for example)."),(0,i.kt)("p",null,"An example ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy.vsh"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-v",metastring:"wip",wip:!0},"#!/usr/bin/env -S v run\n// The shebang above associates the file to V on Unix-like systems,\n// so it can be run just by specifying the path to the file\n// once it's made executable using `chmod +x`.\n\n// print command then execute it\nfn sh(cmd string){\n  println(\"\u276f $cmd\")\n  print(execute_or_exit(cmd).output)\n}\n\n// Remove if build/ exits, ignore any errors if it doesn't\nrmdir_all('build') or { }\n\n// Create build/, never fails as build/ does not exist\nmkdir('build')?\n\n// Move *.v files to build/\nresult := execute('mv *.v build/')\nif result.exit_code != 0 {\n    println(result.output)\n}\n\nsh('ls')\n\n// Similar to:\n// files := ls('.')?\n// mut count := 0\n// if files.len > 0 {\n//     for file in files {\n//         if file.ends_with('.v') {\n//              mv(file, 'build/') or {\n//                  println('err: $err')\n//                  return\n//              }\n//         }\n//         count++\n//     }\n// }\n// if count == 0 {\n//     println('No files')\n// }\n")),(0,i.kt)("p",null,"Now you can either compile this like a normal V program and get an executable you can deploy and run\nanywhere:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v deploy.vsh && ./deploy")),(0,i.kt)("p",null,"Or just run it more like a traditional Bash script:\n",(0,i.kt)("inlineCode",{parentName:"p"},"v run deploy.vsh")),(0,i.kt)("p",null,"On Unix-like platforms, the file can be run directly after making it executable using ",(0,i.kt)("inlineCode",{parentName:"p"},"chmod +x"),":\n",(0,i.kt)("inlineCode",{parentName:"p"},"./deploy.vsh")))}u.isMDXComponent=!0}}]);