"use strict";(self.webpackChunkvlang_ru=self.webpackChunkvlang_ru||[]).push([[9122],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(n),d=o,y=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:9},i="Module imports",l={unversionedId:"documentation/module-imports",id:"documentation/module-imports",title:"Module imports",description:"For information about creating a module, see Modules.",source:"@site/docs/documentation/module-imports.md",sourceDirName:"documentation",slug:"/documentation/module-imports",permalink:"/docs/documentation/module-imports",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"\u0422\u0438\u043f\u044b",permalink:"/docs/documentation/types"},next:{title:"Statements & expressions",permalink:"/docs/documentation/statements-expressions"}},s={},m=[{value:"Selective imports",id:"selective-imports",level:2},{value:"Module import aliasing",id:"module-import-aliasing",level:2}],p={toc:m};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"module-imports"},"Module imports"),(0,o.kt)("p",null,"For information about creating a module, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/documentation/modules"},"Modules"),"."),(0,o.kt)("p",null,"Modules can be imported using the ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," keyword:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-v"},"import os\n\nfn main() {\n    // read text from stdin\n    name := os.input('Enter your name: ')\n    println('Hello, $name!')\n}\n")),(0,o.kt)("p",null,"This program can use any public definitions from the ",(0,o.kt)("inlineCode",{parentName:"p"},"os")," module, such\nas the ",(0,o.kt)("inlineCode",{parentName:"p"},"input")," function. See the ",(0,o.kt)("a",{parentName:"p",href:"https://modules.vlang.io/"},"standard library"),"\ndocumentation for a list of common modules and their public symbols."),(0,o.kt)("p",null,"By default, you have to specify the module prefix every time you call an external function.\nThis may seem verbose at first, but it makes code much more readable\nand easier to understand - it's always clear which function from\nwhich module is being called. This is especially useful in large code bases."),(0,o.kt)("p",null,"Cyclic module imports are not allowed, like in Go."),(0,o.kt)("h2",{id:"selective-imports"},"Selective imports"),(0,o.kt)("p",null,"You can also import specific functions and types from modules directly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-v"},"import os { input }\n\nfn main() {\n    // read text from stdin\n    name := input('Enter your name: ')\n    println('Hello, $name!')\n}\n")),(0,o.kt)("p",null,"Note: This will import the module as well. Also, this is not allowed for\nconstants - they must always be prefixed."),(0,o.kt)("p",null,"You can import several specific symbols at once:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-v"},"import os { input, user_os }\n\nname := input('Enter your name: ')\nprintln('Name: $name')\nos := user_os()\nprintln('Your OS is ${os}.')\n")),(0,o.kt)("h2",{id:"module-import-aliasing"},"Module import aliasing"),(0,o.kt)("p",null,"Any imported module name can be aliased using the ",(0,o.kt)("inlineCode",{parentName:"p"},"as")," keyword:"),(0,o.kt)("p",null,"NOTE: this example will not compile unless you have created ",(0,o.kt)("inlineCode",{parentName:"p"},"mymod/sha256.v")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-v",metastring:"failcompile",failcompile:!0},"import crypto.sha256\nimport mymod.sha256 as mysha256\n\nfn main() {\n    v_hash := sha256.sum('hi'.bytes()).hex()\n    my_hash := mysha256.sum('hi'.bytes()).hex()\n    assert my_hash == v_hash\n}\n")),(0,o.kt)("p",null,"You cannot alias an imported function or type.\nHowever, you ",(0,o.kt)("em",{parentName:"p"},"can")," redeclare a type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-v"},"import time\nimport math\n\ntype MyTime = time.Time\n\nfn (mut t MyTime) century() int {\n    return int(1.0 + math.trunc(f64(t.year) * 0.009999794661191))\n}\n\nfn main() {\n    mut my_time := MyTime{\n        year: 2020\n        month: 12\n        day: 25\n    }\n    println(time.new_time(my_time).utc_string())\n    println('Century: $my_time.century()')\n}\n")))}u.isMDXComponent=!0}}]);